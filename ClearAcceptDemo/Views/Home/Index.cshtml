@model HomeViewModel
@using ClearAccept.ApiClient.Models
@{
ViewData["Title"] = "ClearAccept Demo";
ViewData["Subtitle"] = "Hosted Fields";
var decimalAmount = (Model.Amount / 100m).ToString("#,##0.00");
}

<div class="container-fluid form-container mt-3 text-center">
    <div class="row text-left">
        <div class="form-group col">
            <a href="~/CustomSettings"><i class="fa fa-cog" style="color:darkgray"></i></a>
        </div>
    </div>
    <form id="payment-form" method="post" asp-action="Process">
        <div class="card mb-5 shadow-sm">
            <div class="card-body p-5">
                <div class="col">
                    <label><strong>Total Cost: @(Model?.Currency) @decimalAmount</strong></label>
                </div>
                <div class="row">
                    <div class="col form-group">
                        <input type="hidden" class="form-control" asp-for="Currency" name="Currency"
                            placeholder="Currency" />
                    </div>
                    <div class="col form-group">
                        <input type="hidden" class="form-control" asp-for="Amount" name="Amount" placeholder="Amount" />
                    </div>
                </div>
                <hr>
                <fieldset>
                    <legend class="mb-2 text-left">BILLING INFO</legend>
                    <div class="row">
                        <div class="col-md-6 form-group">
                            <input type="text" class="form-control" id="first-name" asp-for="CustomerInfo.FirstName"
                                name="CustomerInfo.FirstName" placeholder="First Name" />
                        </div>
                        <div class="col-md-6 form-group">
                            <input type="text" class="form-control" id="last-name" asp-for="CustomerInfo.LastName"
                                name="CustomerInfo.LastName" placeholder="Last Name" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 form-group">
                            <input type="text" class="form-control" asp-for="CustomerInfo.PhoneNumber"
                                name="CustomerInfo.PhoneNumber" placeholder="Phone Number" />
                        </div>
                        <div class="col-md-6 form-group">
                            <input type="text" class="form-control" asp-for="CustomerInfo.Email"
                                name="CustomerInfo.Email" placeholder="Email Address" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12 form-group">
                            <input type="text" class="form-control" asp-for="CustomerInfo.BillingAddress.AddressLine1"
                                name="CustomerInfo.BillingAddress.AddressLine1" placeholder="Address Line 1" />
                        </div>
                        <div class="col-md-12 form-group">
                            <input type="text" class="form-control" name="CustomerInfo.BillingAddress.AddressLine2"
                                asp-for="CustomerInfo.BillingAddress.AddressLine2" placeholder="Address Line 2" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3 col-sm-6 form-group">
                            <input type="text" class="form-control" asp-for="CustomerInfo.BillingAddress.City"
                                name="CustomerInfo.BillingAddress.City" placeholder="City" />
                        </div>
                        <div class="col-md-3 col-sm-6 form-group">
                            <input type="text" class="form-control" asp-for="CustomerInfo.BillingAddress.County"
                                name="CustomerInfo.BillingAddress.County" placeholder="County" />
                        </div>
                        <div class="col-md-3 col-sm-6 form-group">
                            <select class="custom-select" asp-for="CustomerInfo.BillingAddress.Country"
                                name="CustomerInfo.BillingAddress.Country">
                                <option selected>Country</option>
                                @foreach(var country in Model.IsoCountries) {
                                <option value="@country.Code">@country.Name</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-3 col-sm-6 form-group">
                            <input type="text" class="form-control" name="CustomerInfo.BillingAddress.PostalCode"
                                asp-for="CustomerInfo.BillingAddress.PostalCode" placeholder="Post Code" />
                        </div>
                    </div>
                </fieldset>
                <hr>
                <fieldset>
                    <legend class="mb-2 text-left">PAYMENT INFO</legend>
                    <!-- Section for saved cards -->
                    @if (Model.SavedCards.Count > 0) {
                    <div id="saved-cards" class="row" id="mb-3">
                        <div class="col-@(Model.Channel != Enums.Channel.MO ? "9" : "12") form-group">
                            <!-- List of PermanentTokens -->
                            <select class="custom-select" id="saved-card" name="PaymentMethod.Token">
                                <option selected disabled hidden>Select..</option>
                                @foreach(var card in Model.SavedCards) {
                                <option value="@card.Token">@card.CardNumber @card.ExpiryDate</option>
                                }
                            </select>
                        </div>
                        @if (Model.Channel != Enums.Channel.MO)
                        {
                        <div id="cvv-holder" class="d-flex col">
                            <!-- CVV-only hosted field wrapper hidden when Channel is Mail-Order -->
                            <div id="cvv-only-wrapper" class="card-field-wrapper"></div>
                            <div id="cvv-only-errors" class="error-message"></div>
                        </div>
                        }
                    </div>
                    <!-- #saved-cards -->
                    <div class="mb-2 text-left row px-3">
                        <div class="custom-control custom-switch col" id="payment-selector-container">
                            <input type="checkbox" class="custom-control-input" id="payment-selector"
                                name="payment-selector">
                            <label class="custom-control-label" for="payment-selector">use a new card</label>
                        </div>
                    </div>
                    }
                    <!-- Section for full card input -->
                    <div id="new-card" class="row @(Model.SavedCards.Count > 0 ? " inactive" : string.Empty)">
                        <div class="d-flex col-6">
                            <div>
                                <!-- Card Number hosted field wrapper -->
                                <div id="card-wrapper" class="card-field-wrapper"></div>
                                <div id="card-errors" class="error-message"></div>
                            </div>
                        </div>
                        <div class="d-flex col">
                            <div>
                                <!-- Card Expiry Date hosted field wrapper -->
                                <div id="expdate-wrapper" class="card-field-wrapper"></div>
                                <div id="expdate-errors" class="error-message"></div>
                            </div>
                        </div>
                        @if (Model.Channel != Enums.Channel.MO)
                        {
                        <div id="cvv-holder" class="d-flex col">
                            <div>
                                <!-- CVV hosted field wrapper -->
                                <div id="cvv-wrapper" class="card-field-wrapper"></div>
                                <div id="cvv-errors" class="error-message"></div>
                            </div>
                        </div>
                        }
                        <!-- Checkbox for the customer to opt to save a new card -->
                        <div class="mb-2 text-left col-12 mt-3 text-right" id="save-card-container">
                            <div class="custom-control custom-switch hidden" id="save-toggle">
                                <input type="checkbox" class="custom-control-input" asp-for="PaymentMethod.Persist"
                                    id="persist" name="PaymentMethod.Persist">
                                <label class="custom-control-label" for="persist"><small>save card</small></label>
                            </div>
                        </div>
                    </div>
                    <!-- #new-card -->
                </fieldset>
                <input type="hidden" id="token" name="PaymentMethod.Token" asp-for="PaymentMethod.Token" />
                <input type="hidden" id="cvv-token" name="PaymentMethod.CvvToken" asp-for="PaymentMethod.CvvToken" />
                <input type="hidden" id="request-id" name="PaymentRequestId" asp-for="PaymentRequestId" />

                <!-- Button to complete the payment -->
                <button type="submit" class="btn btn-primary text-white w-100 mt-3" id="pay">
                    <span id="pay-text">Pay now</span>
                    <div class="spinner hidden" id="pay-loader"></div>
                </button>
            </div>
        </div>
    </form>
</div>

<!-- Output to demo the calls made to ClearAccept from the backend -->
@if(Model.Error == null) {
<div class="container-fluid pt-5 text-center" style="opacity: 0.5;">
    <button id="test-clear-output" class="btn btn-sm btn-secondary mb-2">Clear Output</button>
    <div class="row">
        <div class="col">
            <textarea id="test-output" name="test-outputs" class="process-result"
                spellcheck="false">Request:&#13;&#13;@Model.Request</textarea>
        </div>
        <div class="col">
            <textarea id="test-output" name="test-outputs" class="process-result"
                spellcheck="false">Response:&#13;&#13;@Model.Response</textarea>
        </div>
    </div>
</div>
} else {
<div class="container-fluid" style="opacity: 0.5;">
    <button id="test-clear-output" class="btn btn-sm btn-secondary mb-2">Clear Output</button>
    <textarea id="test-output" name="test-outputs" spellcheck="false">@Model.Error</textarea>
</div>
}

<script src="~/js/demo.js" asp-append-version="true"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
<script src="@Model.PaymentsLibraryUrl"></script>
<script>
    initHostedFields("@Model.FieldToken", "@Model.Channel");
</script>